{"version":3,"sources":["reusable/DocsLink.js","../../../js/src/custom-tooltips.js","../node_modules/@coreui/react-chartjs/es/CChart.js","views/charts/Charts.js"],"names":["DocsLink","props","name","text","rest","href","className","rel","target","React","memo","ClassName","Selector","DIV","SPAN","TOOLTIP","this","_chart","canvas","id","_idMaker","Math","_canvasId","_setCanvasId","tooltip","document","tooltipModel","titleLines","tooltipHeader","title","tooltipHeaderTitle","tooltipBody","item","tooltipBodyItems","tooltipBodyItem","colors","tooltipBodyItemColor","tooltipBodyItemLabel","tooltipBodyItemValue","position","positionY","positionLeft","positionTop","halfWidth","_extends","Object","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","months","CChart","innerRef","datasets","labels","options","plugins","type","attributes","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","compData","useRef","firstRun","current","_useState","useState","chart","setChart","ref","safeId","random","toString","replace","destroyChart","destroy","dataset","data","computedLabels","useMemo","emptyLabels","Array","fill","map","u","JSON","stringify","customTooltips","tooltips","enabled","custom","cuiCustomTooltips","intersect","mode","callbacks","labelColor","tooltipItem","prop","datasetIndex","backgroundColor","tooltipLabelColor","pointHoverBackgroundColor","borderColor","index","chartConfig","useEffect","update","Chart","getContext","createElement","propTypes","CChartBar","CChartLine","CChartDoughnut","CChartRadar","CChartPie","CChartPolarArea","Charts","columns","label","pointBackgroundColor","pointBorderColor","pointHoverBorderColor","aspectRatio"],"mappings":"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","file":"static/js/20.5e1e9255.chunk.js","sourcesContent":["import React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = props => {\n  const {\n    name,\n    text,\n    ...rest\n  } = props\n\n  const href = name ? `https://coreui.io/react/docs/components/${name}` : props.href\n\n  return (\n    <div className=\"card-header-actions\">\n      <CLink \n        {...rest}\n        href={href}\n        rel=\"noreferrer noopener\" \n        target=\"_blank\" \n        className=\"card-header-action\"  \n      >\n        <small className=\"text-muted\">{ text || 'docs' }</small>\n      </CLink>\n    </div>\n  )\n}\n\nexport default React.memo(DocsLink)","/**\n * --------------------------------------------------------------------------\n * Custom Tooltips for Chart.js (vv2.0.0-beta.0): custom-tooltips.js\n * Licensed under MIT (https://coreui.io/plugins/chart.js)\n * --------------------------------------------------------------------------\n */\n\nfunction customTooltips(tooltipModel) {\n  // Add unique id if not exist\n  const _setCanvasId = () => {\n    const _idMaker = () => {\n      const _hex = 16\n      const _multiplier = 0x10000\n      return ((1 + Math.random()) * _multiplier | 0).toString(_hex)\n    }\n    const _canvasId = `_canvas-${_idMaker() + _idMaker()}`\n    this._chart.canvas.id = _canvasId\n    return _canvasId\n  }\n\n  const ClassName = {\n    ABOVE                   : 'c-above',\n    BELOW                   : 'c-below',\n    CHARTJS_TOOLTIP         : 'c-chartjs-tooltip',\n    NO_TRANSFORM            : 'c-no-transform',\n    TOOLTIP_BODY            : 'c-tooltip-body',\n    TOOLTIP_BODY_ITEM       : 'c-tooltip-body-item',\n    TOOLTIP_BODY_ITEM_COLOR : 'c-tooltip-body-item-color',\n    TOOLTIP_BODY_ITEM_LABEL : 'c-tooltip-body-item-label',\n    TOOLTIP_BODY_ITEM_VALUE : 'c-tooltip-body-item-value',\n    TOOLTIP_HEADER          : 'c-tooltip-header',\n    TOOLTIP_HEADER_ITEM     : 'c-tooltip-header-item'\n  }\n\n  const Selector = {\n    DIV     : 'div',\n    SPAN    : 'span',\n    TOOLTIP : `${this._chart.canvas.id || _setCanvasId()}-tooltip`\n  }\n\n  let tooltip = document.getElementById(Selector.TOOLTIP)\n\n  if (!tooltip) {\n    tooltip = document.createElement('div')\n    tooltip.id = Selector.TOOLTIP\n    tooltip.className = ClassName.CHARTJS_TOOLTIP\n    this._chart.canvas.parentNode.appendChild(tooltip)\n  }\n\n  // Hide if no tooltip\n  if (tooltipModel.opacity === 0) {\n    tooltip.style.opacity = 0\n    return\n  }\n\n  // Set caret Position\n  tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM)\n  if (tooltipModel.yAlign) {\n    tooltip.classList.add(tooltipModel.yAlign)\n  } else {\n    tooltip.classList.add(ClassName.NO_TRANSFORM)\n  }\n\n  // Set Text\n  if (tooltipModel.body) {\n    const titleLines = tooltipModel.title || []\n\n    const tooltipHeader = document.createElement(Selector.DIV)\n    tooltipHeader.className = ClassName.TOOLTIP_HEADER\n\n    titleLines.forEach((title) => {\n      const tooltipHeaderTitle = document.createElement(Selector.DIV)\n      tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM\n      tooltipHeaderTitle.innerHTML = title\n      tooltipHeader.appendChild(tooltipHeaderTitle)\n    })\n\n    const tooltipBody = document.createElement(Selector.DIV)\n    tooltipBody.className = ClassName.TOOLTIP_BODY\n\n    const tooltipBodyItems = tooltipModel.body.map((item) => item.lines)\n    tooltipBodyItems.forEach((item, i) => {\n      const tooltipBodyItem = document.createElement(Selector.DIV)\n      tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM\n\n      const colors = tooltipModel.labelColors[i]\n\n      const tooltipBodyItemColor = document.createElement(Selector.SPAN)\n      tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR\n      tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor\n\n      tooltipBodyItem.appendChild(tooltipBodyItemColor)\n\n      if (item[0].split(':').length > 1) {\n        const tooltipBodyItemLabel = document.createElement(Selector.SPAN)\n        tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL\n        tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemLabel)\n\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0].split(': ').pop()\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      } else {\n        const tooltipBodyItemValue = document.createElement(Selector.SPAN)\n        tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE\n        tooltipBodyItemValue.innerHTML = item[0]\n\n        tooltipBodyItem.appendChild(tooltipBodyItemValue)\n      }\n\n      tooltipBody.appendChild(tooltipBodyItem)\n    })\n\n    tooltip.innerHTML = ''\n\n    tooltip.appendChild(tooltipHeader)\n    tooltip.appendChild(tooltipBody)\n  }\n\n  const position = this._chart.canvas.getBoundingClientRect()\n\n  const positionY = this._chart.canvas.offsetTop\n  const positionX = this._chart.canvas.offsetLeft\n\n  let positionLeft = positionX + tooltipModel.caretX\n  const positionTop = positionY + tooltipModel.caretY\n  // eslint-disable-next-line\n  const halfWidth = tooltipModel.width / 2\n\n  if (positionLeft + halfWidth > position.width) {\n    positionLeft -= halfWidth\n  } else if (positionLeft < halfWidth) {\n    positionLeft += halfWidth\n  }\n\n  // Display, position, and set styles for font\n  tooltip.style.opacity = 1\n  tooltip.style.left = `${positionLeft}px`\n  tooltip.style.top = `${positionTop}px`\n}\n\nexport default customTooltips\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState, useEffect, useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport { customTooltips as cuiCustomTooltips } from '@coreui/chartjs';\nimport '@coreui/chartjs/dist/css/coreui-chartjs.css';\nvar months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\nvar key = function key() {\n  return Math.random().toString(36).replace('0.', '');\n}; //component - CoreUI / CChart\n\n\nvar CChart = function CChart(props) {\n  var innerRef = props.innerRef,\n      datasets = props.datasets,\n      labels = props.labels,\n      options = props.options,\n      plugins = props.plugins,\n      type = props.type,\n      attributes = _objectWithoutPropertiesLoose(props, [\"innerRef\", \"datasets\", \"labels\", \"options\", \"plugins\", \"type\"]);\n\n  var compData = useRef({\n    firstRun: true\n  }).current;\n\n  var _useState = useState(),\n      chart = _useState[0],\n      setChart = _useState[1];\n\n  var ref = useRef();\n  var safeId = useState('safe_id_' + key())[0]; // methods\n\n  var renderChart = function renderChart() {\n    destroyChart();\n    setChart(new Chart(ref.current.getContext('2d'), chartConfig));\n  };\n\n  var updateChart = function updateChart() {\n    Object.assign(chart, chartConfig);\n    chart.update();\n  };\n\n  var destroyChart = function destroyChart() {\n    return chart && chart.destroy();\n  };\n\n  var dataset = datasets && datasets[0] && datasets[0].data || [];\n  var computedLabels = useMemo(function () {\n    if (labels && typeof labels !== 'string') {\n      return labels;\n    }\n\n    var emptyLabels = Array(dataset.length).fill('');\n\n    if (labels === 'indexes') {\n      return emptyLabels.map(function (u, i) {\n        return i + 1;\n      });\n    } else if (labels === 'months') {\n      return emptyLabels.map(function (u, i) {\n        return months[i % 12];\n      });\n    }\n\n    return emptyLabels;\n  }, [JSON.stringify(labels), dataset.length]);\n\n  var customTooltips = function () {\n    if (options && options.tooltips) {\n      return;\n    }\n\n    return {\n      tooltips: {\n        enabled: false,\n        custom: cuiCustomTooltips,\n        intersect: true,\n        mode: 'index',\n        position: 'nearest',\n        callbacks: {\n          labelColor: function labelColor(tooltipItem, chart) {\n            function getValue(prop) {\n              return typeof prop === 'object' ? prop[tooltipItem.index] : prop;\n            }\n\n            var dataset = chart.data.datasets[tooltipItem.datasetIndex]; //tooltipLabelColor is coreUI custom prop used only here\n\n            var backgroundColor = getValue(dataset.tooltipLabelColor || dataset.pointHoverBackgroundColor || dataset.borderColor || dataset.backgroundColor);\n            return {\n              backgroundColor: backgroundColor\n            };\n          }\n        }\n      }\n    };\n  }();\n\n  var computedOptions = function () {\n    return Object.assign({}, options, customTooltips || {});\n  }();\n\n  var chartConfig = {\n    type: type,\n    data: {\n      datasets: datasets,\n      labels: computedLabels\n    },\n    options: computedOptions,\n    plugins: plugins\n  };\n  useEffect(function () {\n    if (compData.firstRun) return;\n    updateChart();\n  }, [chartConfig]);\n  useEffect(function () {\n    renderChart();\n    compData.firstRun = false;\n    return function () {\n      return destroyChart();\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, attributes, {\n    ref: innerRef\n  }), /*#__PURE__*/React.createElement(\"canvas\", {\n    id: safeId,\n    ref: ref\n  }));\n};\n\nCChart.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  datasets: PropTypes.array,\n  labels: PropTypes.oneOfType([PropTypes.array, PropTypes.string]),\n  options: PropTypes.object,\n  plugins: PropTypes.array,\n  type: PropTypes.string\n} : {};\n\nvar CChartBar = function CChartBar(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"bar\"\n  }));\n};\n\nvar CChartHorizontalBar = function CChartHorizontalBar(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"horizontalBar\"\n  }));\n};\n\nvar CChartLine = function CChartLine(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"line\"\n  }));\n};\n\nvar CChartDoughnut = function CChartDoughnut(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"doughnut\"\n  }));\n};\n\nvar CChartRadar = function CChartRadar(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"radar\"\n  }));\n};\n\nvar CChartPie = function CChartPie(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"pie\"\n  }));\n};\n\nvar CChartPolarArea = function CChartPolarArea(props) {\n  return /*#__PURE__*/React.createElement(CChart, _extends({}, props, {\n    type: \"polarArea\"\n  }));\n};\n\nvar CCharts = function CCharts(props) {\n  console.warn('<CCharts> component has been deprecated. Use <CChart> or <CChart{type}> instead');\n  return /*#__PURE__*/React.createElement(CChart, props);\n};\n\nexport { CChart, CCharts, CChartBar, CChartHorizontalBar, CChartLine, CChartDoughnut, CChartRadar, CChartPie, CChartPolarArea };","import React from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCardHeader\n} from '@coreui/react'\nimport {\n  CChartBar,\n  CChartLine,\n  CChartDoughnut,\n  CChartRadar,\n  CChartPie,\n  CChartPolarArea\n} from '@coreui/react-chartjs'\nimport { DocsLink } from 'src/reusable'\n\nconst Charts = () => {\n\n  return (\n    <CCardGroup columns className = \"cols-2\" >\n      <CCard>\n        <CCardHeader>\n          Bar Chart\n          <DocsLink href=\"http://www.chartjs.org\"/>\n        </CCardHeader>\n        <CCardBody>\n          <CChartBar\n            datasets={[\n              {\n                label: 'GitHub Commits',\n                backgroundColor: '#f87979',\n                data: [40, 20, 12, 39, 10, 40, 39, 80, 40, 20, 12, 11]\n              }\n            ]}\n            labels=\"months\"\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }}\n          />\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          Doughnut Chart\n        </CCardHeader>\n        <CCardBody>\n          <CChartDoughnut\n            datasets={[\n              {\n                backgroundColor: [\n                  '#41B883',\n                  '#E46651',\n                  '#00D8FF',\n                  '#DD1B16'\n                ],\n                data: [40, 20, 80, 10]\n              }\n            ]}\n            labels={['VueJs', 'EmberJs', 'ReactJs', 'AngularJs']}\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }}\n          />\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          Line Chart\n        </CCardHeader>\n        <CCardBody>\n          <CChartLine\n            datasets={[\n              {\n                label: 'Data One',\n                backgroundColor: 'rgb(228,102,81,0.9)',\n                data: [30, 39, 10, 50, 30, 70, 35]\n              },\n              {\n                label: 'Data Two',\n                backgroundColor: 'rgb(0,216,255,0.9)',\n                data: [39, 80, 40, 35, 40, 20, 45]\n              }\n            ]}\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }}\n            labels=\"months\"\n          />\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          Pie Chart\n        </CCardHeader>\n        <CCardBody>\n          <CChartPie\n            datasets={[\n              {\n                backgroundColor: [\n                  '#41B883',\n                  '#E46651',\n                  '#00D8FF',\n                  '#DD1B16'\n                ],\n                data: [40, 20, 80, 10]\n              }\n            ]}\n            labels={['VueJs', 'EmberJs', 'ReactJs', 'AngularJs']}\n            options={{\n              tooltips: {\n                enabled: true\n              }\n            }}\n          />\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          Polar Area Chart\n        </CCardHeader>\n        <CCardBody>\n          <CChartPolarArea\n            datasets={[\n              {\n                label: 'My First dataset',\n                backgroundColor: 'rgba(179,181,198,0.2)',\n                pointBackgroundColor: 'rgba(179,181,198,1)',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: 'rgba(179,181,198,1)',\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\n                data: [65, 59, 90, 81, 56, 55, 40]\n              },\n              {\n                label: 'My Second dataset',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                pointBackgroundColor: 'rgba(255,99,132,1)',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: 'rgba(255,99,132,1)',\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\n                data: [28, 48, 40, 19, 96, 27, 100]\n              }\n            ]}\n            options={{\n              aspectRatio: 1.5,\n              tooltips: {\n                enabled: true\n              }\n            }}\n            labels={[\n              'Eating', 'Drinking', 'Sleeping', 'Designing',\n              'Coding', 'Cycling', 'Running'\n            ]}\n          />\n        </CCardBody>\n      </CCard>\n\n      <CCard>\n        <CCardHeader>\n          Radar Chart\n        </CCardHeader>\n        <CCardBody>\n          <CChartRadar\n            datasets={[\n              {\n                label: '2019',\n                backgroundColor: 'rgba(179,181,198,0.2)',\n                borderColor: 'rgba(179,181,198,1)',\n                pointBackgroundColor: 'rgba(179,181,198,1)',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: 'rgba(179,181,198,1)',\n                tooltipLabelColor: 'rgba(179,181,198,1)',\n                data: [65, 59, 90, 81, 56, 55, 40]\n              },\n              {\n                label: '2020',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                pointBackgroundColor: 'rgba(255,99,132,1)',\n                pointBorderColor: '#fff',\n                pointHoverBackgroundColor: '#fff',\n                pointHoverBorderColor: 'rgba(255,99,132,1)',\n                tooltipLabelColor: 'rgba(255,99,132,1)',\n                data: [28, 48, 40, 19, 96, 27, 100]\n              }\n            ]}\n            options={{\n              aspectRatio: 1.5,\n              tooltips: {\n                enabled: true\n              }\n            }}\n            labels={[\n              'Eating', 'Drinking', 'Sleeping', 'Designing',\n              'Coding', 'Cycling', 'Running'\n            ]}\n          />\n        </CCardBody>\n      </CCard>\n    </CCardGroup>\n  )\n}\n\nexport default Charts\n"],"sourceRoot":""}