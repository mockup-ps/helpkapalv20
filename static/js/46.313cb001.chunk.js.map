{"version":3,"sources":["supabase.js","views/pages/Viavalen/actionComponent.js","views/pages/Viavalen/Viavalen.js"],"names":["supabase","createClient","process","ViewOnly","className","class","ViewAndCAP","props","history","useHistory","dispatch","useDispatch","onClick","push","type","datadetensi","ViewAndEdit","Viavalen","useState","data","setData","details","setDetails","arrWarna","simView","useSelector","state","useEffect","a","from","select","detensi","urstatus","datas","map","x","id_detensi","tr_status","th_detensi","console","log","addTableClasses","items","fields","key","label","_style","width","scopedSlots","item","index","position","indexOf","newDetails","slice","splice","toggleDetails","role","color","parseInt","kd_status","ur_status","show","includes","histori","date","Date","created_at","hari","getDate","bulan","getMonth","tahun","getFullYear","jam","getHours","menit","getMinutes","detik","getSeconds","style","minWidth","toString","length"],"mappings":"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","file":"static/js/46.313cb001.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = 'https://ctvjpxocqeajngziaxji.supabase.co'\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY\r\nconst supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport default supabase","import { CButton } from '@coreui/react'\r\nimport {React} from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ViewOnly = () =>{\r\n    return(\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                 \r\n            </div>                                  \r\n        </div>          \r\n    )\r\n}\r\n\r\nconst ViewAndCAP = (props) =>{\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const handleCAP = () =>{\r\n        history.push('/hdpsc/edit')\r\n        dispatch({type:'set', datadetensi:props.datadetensi})\r\n    }      \r\n    return(\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                     \r\n            </div>  \r\n            <div>\r\n                <CButton onClick={()=>handleCAP()} className=\"btn btn-sm btn-info\">\r\n                    <i class=\"fas fa-wrench\"></i>\r\n                </CButton>                                     \r\n            </div>                                   \r\n        </div>        \r\n    )\r\n}\r\n\r\nconst ViewAndEdit = (props) =>{\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const handleEdit = () =>{\r\n        history.push('/hdpsc/edit')\r\n        dispatch({type:'set', datadetensi:props.datadetensi})\r\n    }     \r\n    return(\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                     \r\n            </div>  \r\n            <div>\r\n                <CButton onClick={()=>handleEdit()} className=\"btn btn-sm btn-warning\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                </CButton>                                     \r\n            </div>                                   \r\n        </div>          \r\n    )\r\n}\r\n\r\nexport {ViewOnly, ViewAndEdit, ViewAndCAP}","import { CCardHeader, CCard, CCardBody, CDataTable, CBadge, CButton, CCollapse, CCol, CRow} from '@coreui/react'\r\nimport {React, useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport supabase from '../../../supabase'\r\nimport {ViewAndEdit, ViewOnly, ViewAndCAP} from './actionComponent'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Viavalen = () =>{\r\n    const dispatch = useDispatch()\r\n    let history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const [details, setDetails] = useState([])\r\n    const arrWarna = [\"success\",\"primary\",\"warning\",\"info\"]\r\n    const simView = useSelector((state)=>state.simView)\r\n    const toggleDetails = (index) => {\r\n        const position = details.indexOf(index)\r\n        let newDetails = details.slice()\r\n        if (position !== -1) {\r\n          newDetails.splice(position, 1)\r\n        } else {\r\n          newDetails = [...details, index]\r\n        }\r\n        setDetails(newDetails)\r\n      } \r\n    useEffect(async () => {\r\n        const detensi = await supabase\r\n        .from('td_detensi')\r\n        .select(`\r\n            id_detensi,\r\n            data,\r\n            tr_status (\r\n                kd_status,\r\n                ur_status\r\n            ),\r\n            th_detensi (\r\n                kd_status,\r\n                created_at\r\n            )\r\n        `)          \r\n        const urstatus = await supabase\r\n        .from('tr_status')\r\n        .select(`\r\n            kd_status,\r\n            ur_status\r\n        `)         \r\n        let datas = detensi.data.map(x=>{\r\n            return(\r\n                {['id_detensi']:x.id_detensi, ...x.data, ...x.tr_status, ['histori']:x.th_detensi}\r\n            )\r\n        })\r\n        setData(datas)   \r\n        console.log(urstatus) \r\n      },[]);      \r\n    return(\r\n        <CCard>\r\n            <CCardHeader>\r\n                <h5>Data Detensi Kapal</h5>\r\n            </CCardHeader>          \r\n            <CCardBody>\r\n                {\r\n                    simView == 1 ?\r\n                    <>\r\n                        <div className=\"d-flex justify-content-end mb-2\">\r\n                            <CButton onClick={()=>history.push('/hdpsc/new')} className=\"btn btn-info\">\r\n                                Buat Baru <i class=\"fas fa-plus\"></i>\r\n                            </CButton>\r\n                        </div>  \r\n                    </>\r\n                    :\r\n                    <></>                                        \r\n                }                \r\n                <CDataTable\r\n                addTableClasses=\"josss\"\r\n                items={data}\r\n                fields={[\r\n                    { key: 'no', label: 'No', _style: { width: '5%'} },\r\n                    { key: 'namakapal', label: 'Nama Kapal' },\r\n                    { key: 'imokapal', label: 'Nomor IMO Kapal' },\r\n                    { key: 'tgldetensi', label: 'Tanggal Detensi' },\r\n                    { key: 'status', label: 'Status' },                    \r\n                    { key: 'action', label: 'Action' }                                        \r\n                ]}\r\n                scopedSlots={{\r\n                    'no':\r\n                    (item, index)=>{\r\n                        return(\r\n                            <td>\r\n                                {index+1}\r\n                            </td>\r\n                        )\r\n                    },\r\n                    'status':\r\n                    (item, index) =>{\r\n                        return(\r\n                            <td>\r\n                                <CBadge onClick={()=>{toggleDetails(index)}} role=\"button\" color={arrWarna[parseInt(item.kd_status)-1]}>\r\n                                    {item.ur_status}                                \r\n                                </CBadge>\r\n                            </td>\r\n                        )\r\n                    },\r\n                    'action':\r\n                    (item, index) =>{\r\n                        return(\r\n                            <td>\r\n                                {\r\n                                    simView == 1 ?\r\n                                    <ViewOnly/>\r\n                                    :\r\n                                    simView == 2 && item.kd_status == 1 ?\r\n                                    <ViewAndEdit datadetensi={item} />\r\n                                    :\r\n                                    simView == 3 && item.kd_status == 2 ?\r\n                                    <ViewAndEdit datadetensi={item}/>\r\n                                    :\r\n                                    simView == 3 && item.kd_status == 3 ?\r\n                                    <ViewAndCAP datadetensi={item}/>\r\n                                    :\r\n                                    <ViewOnly/>\r\n                                }                                \r\n                            </td>\r\n                        )\r\n                    },\r\n                    'details':\r\n                    (item, index) =>{\r\n                        return(\r\n                            <CCollapse show={details.includes(index)}>\r\n                                {item.histori.map(x=>{\r\n                                    let date = new Date(x.created_at)\r\n                                    let hari = date.getDate()\r\n                                    let bulan = date.getMonth() + 1\r\n                                    let tahun = date.getFullYear()\r\n                                    let jam = date.getHours()\r\n                                    let menit = date.getMinutes()\r\n                                    let detik = date.getSeconds()\r\n                                    return(\r\n                                        <div className=\"d-flex flex-row justify-content-end mx-3 my-3\">\r\n                                            <div className=\"d-flex flex-column justify-content-center mr-2\">\r\n                                                <CBadge color={arrWarna[parseInt(x.kd_status)-1]}>\r\n                                                    {\r\n                                                        x.kd_status == 1 ?\r\n                                                        \"Pemberitahuan oleh Dit. KPLP\"\r\n                                                        :\r\n                                                        x.kd_status == 2 ?\r\n                                                        \"Penerusan Informasi oleh Dit. KAPEL\"\r\n                                                        :\r\n                                                        x.kd_status == 3 ?\r\n                                                        \"Input Data oleh BKI\"\r\n                                                        :\r\n                                                        x.kd_status == 4 ?\r\n                                                        \"Input CAP oleh BKI\"\r\n                                                        :\r\n                                                        \"\"\r\n                                                    }                                                    \r\n                                                </CBadge>\r\n                                            </div>\r\n                                            <div style={{minWidth:\"15vw\"}} className=\"d-flex flex-column\">\r\n                                                {hari.toString().length == 1 ? \"0\"+hari : hari}-{bulan.toString().length == 1 ? \"0\"+bulan : bulan}-{tahun}{' '}{jam}:{menit}:{detik}\r\n                                            </div>                                    \r\n                                        </div>                                        \r\n                                    )\r\n                                })}\r\n                            </CCollapse>                            \r\n                        )\r\n                    }\r\n                }}\r\n                />\r\n            </CCardBody>\r\n        </CCard>\r\n    )\r\n}\r\n\r\nexport default Viavalen"],"sourceRoot":""}